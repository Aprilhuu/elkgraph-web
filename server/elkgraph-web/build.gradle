dependencies {
	compile "org.eclipse.sprotty:org.eclipse.sprotty.server:${versions.sprotty}"
	compile "org.eclipse.sprotty:org.eclipse.sprotty.layout:${versions.sprotty}"
	compile "org.eclipse.sprotty:org.eclipse.sprotty.xtext:${versions.sprotty}"
	compile "org.eclipse.xtext:org.eclipse.xtext.ide:${versions.xtext}"
	compile "org.eclipse.elk:org.eclipse.elk.graph.text.ide:${versions.elk}"
	compile "org.eclipse.lsp4j:org.eclipse.lsp4j:${versions.lsp4j}"
	compile "org.eclipse.jetty:jetty-server:${versions.jetty}"
	compile "org.eclipse.jetty.websocket:javax-websocket-server-impl:${versions.jetty}"
	compile "org.slf4j:slf4j-log4j12:${versions.slf4j}"
	
	// Layout algorithms
	compile "org.eclipse.elk:org.eclipse.elk.alg.force:${versions.elk}"
	compile "org.eclipse.elk:org.eclipse.elk.alg.layered:${versions.elk}"
	compile "org.eclipse.elk:org.eclipse.elk.alg.mrtree:${versions.elk}"
	compile "org.eclipse.elk:org.eclipse.elk.alg.radial:${versions.elk}"
	compile "org.eclipse.elk:org.eclipse.elk.alg.disco:${versions.elk}"
	compile "org.eclipse.elk:org.eclipse.elk.alg.spore:${versions.elk}"
}

task jettyRun(type: JavaExec) {
	dependsOn(sourceSets.main.runtimeClasspath)
	classpath = sourceSets.main.runtimeClasspath.filter{it.exists()}
	main = 'de.cau.cs.kieler.elkgraph.web.ServerLauncher'
	args = [rootProject.file('..')]
	standardInput = System.in
	group = 'run'
	description = 'Starts the ELK Graph server'
}
